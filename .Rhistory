Rcpp::sourceCpp("src/RcppExports.cpp")
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
library(Rcpp)
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
data(iris)
X=iris[,-5]
y=iris[,5]
X=as.matrix(X)
y=as.integer(y)
X0=c(5.8,3,4.35,1.3)
my_knn_cpp(X,X0,y)
my_knn_R = function(X, X0, y){
# X data matrix with input attributes
# y response variable values of instances in X
# X0 vector of input attributes for prediction
nrows = nrow(X)
ncols = ncol(X)
# One of the instances is going to be the closest one:
#   closest_distance: it is the distance , min_output
closest_distance = 99999999
closest_output = -1
closest_neighbor = -1
for(i in 1:nrows){
distance = 0
for(j in 1:ncols){
difference = X[i,j]-X0[j]
distance = distance + difference * difference
}
distance = sqrt(distance)
if(distance < closest_distance){
closest_distance = distance
closest_output = y[i]
closest_neighbor = i
}
}
closest_output
}
my_knn_R(X,X0,y)
my_knn_cpp(X,X0,y)
install.packages("microbenchmark")
#install.packages("microbenchmark")
library(microbenchmark)
microbenchmark(list(my_knn_cpp(X,X0,y),my_knn_R(X,X0,y)))
microbenchmark(my_knn_cpp(X,X0,y),my_knn_R(X,X0,y))
install.packages("FNN")
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
minmax(1:6)
minmax_data(1:6)
stand_data(1:6)
y=stand_data(1:6)
mean(y)
sd(y)
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
Mink_dist(1:6,1:6)
Mink_dist(1:6,1:6,2)
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
Mink_dist(1:6,1:6,2)
Mink_dist(1:6,2:7,2)
Mink_dist(1:6,2:7,5)
Mink_dist(1:6,2:7,10)
Mink_dist(1:6,11:16,10)
Mink_dist(1:6,11:16,9)
Mink_dist(1:6,11:16,8)
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
Mink_dist(1:6,11:16,8)
library(magrittr)
abs((1:6-11:16)^8)
abs((1:6-11:16)^8) %>% sum
w=abs((1:6-11:16)^8) %>% sum
p=8
w=abs((1:6-11:16)^p) %>% sum
w^(1/p)
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
Mink_dist(1:6,11:16,8)
p=8
w=abs((1:6-11:16)^p) %>% sum
w
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
Mink_dist(1:6,11:16,8)
p=8
w=abs((1:6-11:16)^p) %>% sum
w^(1/p)
Mink_dist(1:6,11:16,2)
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
Mink_dist(1:6,11:16,2)
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
Mink_dist(1:6,11:16,2)
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
Mink_dist(1:6,11:16,2)
p=2
w=abs((1:6-11:16)^p) %>% sum
w^(1/p)
Mink_dist(1:6,11:16,14)
p=14
w=abs((1:6-11:16)^p) %>% sum
w^(1/p)
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
Mink_dist(1:6,11:16,-1)
Rcpp::sourceCpp("src/rcpp_hello_world.cpp")
